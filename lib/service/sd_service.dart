import 'dart:io';import 'package:flutter_secure_storage/flutter_secure_storage.dart';class DBService {  static  final options = WebOptions();  static  final _storage  =  FlutterSecureStorage(webOptions: options);  static String key = 'user';  static Future<void> storeData({required String  value}) async {    await _storage.write(key: key, value: value );  }  static Future<String> readData({required String key}) async {    String data =        await _storage.read(key: key) ?? "";    return data;  }  static Future<bool> contains({required String key}) async {    bool result =    await _storage.containsKey(key: key);    return result;  }  static  Future<void> deleteData({required String key}) async {    await _storage.delete(key: key );  }  static  Future<Map<String, String>?> readAllData() async {    Map<String, String> json =    await _storage.readAll();    return json;  }  static  Future<void> clearStorage() async {    await _storage.deleteAll( );  }  static Future<bool> readMain() async {    String data =        await _storage.read(key: key) ?? "";    if(data.isNotEmpty){      return true;    }    return false;  }}