class SignUpFailure implements Exception {  final String message;  const SignUpFailure([    this.message = 'An unknown exception occurred.',  ]);  factory SignUpFailure.fromCode(String code) {       switch (code) {      case 'invalid-email':        return const SignUpFailure(          'Email is not valid or badly formatted.',        );      case 'user-disabled':        return const SignUpFailure(          'This user has been disabled. Please contact support for help.',        );      case 'email-already-in-use':        return const SignUpFailure(          'An account already exists for that email.',        );      case 'operation-not-allowed':        return const SignUpFailure(          'Operation is not allowed.  Please contact support.',        );      case 'weak-password':        return const SignUpFailure(          'Please enter a stronger password.',        );      default:        return const SignUpFailure();    }  }  @override  String toString() {    return '$message';  }}class SignInFailure implements Exception {  final String message;      const SignInFailure([    this.message = 'An unknown exception occurred.',  ]);  @override  String toString() {    return '$message';  }  factory SignInFailure.fromCode(String code) {    switch (code) {      case 'invalid-email':        return const SignInFailure(          'Email is not valid or badly formatted.',        );      case 'user-disabled':        return const SignInFailure(          'This user has been disabled. Please contact support for help.',        );      case 'user-not-found':        return const SignInFailure(          'Email is not found, please create an account.',        );      case 'wrong-password':        return const SignInFailure(          'Incorrect password, please try again.',        );      default:        return const SignInFailure();    }  }}class LogOutFailure implements Exception {}