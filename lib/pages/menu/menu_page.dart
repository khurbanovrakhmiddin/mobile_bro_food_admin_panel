import 'package:flutter/material.dart';import 'package:graphql_flutter/graphql_flutter.dart';import 'package:mobile_bro_food_admin_panel/pages/detail/detail_page.dart';import 'package:mobile_bro_food_admin_panel/pages/menu/controller/menu_provider.dart';import 'package:mobile_bro_food_admin_panel/repository/graphql_repost.dart';import 'package:provider/provider.dart';GraphQLConfiguration graphQLConfiguration = GraphQLConfiguration();class MenuPage extends StatelessWidget {  const MenuPage({Key? key}) : super(key: key);  @override  Widget build(BuildContext context) {    print('MenuPage');    return GraphQLProvider(      client: graphQLConfiguration.client,      child: CacheProvider(        child: ChangeNotifierProvider<MenuProvider>(          create: (context) => MenuProvider()..get(),          child: const _MenuPage(),        ),      ),    );  }}class _MenuPage extends StatelessWidget {  const _MenuPage({Key? key}) : super(key: key);  @override  Widget build(BuildContext context) {    print('MenuPage');    final provider = context.watch<MenuProvider>();    print(provider.list.length);    return SizedBox(      height: MediaQuery.of(context).size.height * .8,      child: Stack(        children: [           _MenuView(),          ElevatedButton(            style: ElevatedButton.styleFrom(                padding: const EdgeInsets.only(top: 10),                backgroundColor: Colors.transparent),              onPressed: provider.closeOrOpen,              child: const Text("Menyuga Yangi Taom Qoshish")),          Detail(),          Visibility(              visible: provider.isLoading,              child: const Center(                child: LinearProgressIndicator(),              )),        ],      ),    );  }}class _MenuView extends StatelessWidget {  const _MenuView({    Key? key,  }) : super(key: key);  @override  Widget build(BuildContext context) {    final provider = context.read<MenuProvider>();    return ListView.builder(      padding: const EdgeInsets.only(top: 50),      itemCount: provider.list.length,      itemBuilder: (context, i) {        return Card(          child: ListTile(            onTap:  ()=>provider.open(i),            onLongPress: ()=> provider.deleteMenu(provider.list[i], i),            title: Text(provider.list[i].name),            subtitle: Row(              children: [                Text(provider.list[i].price),                const SizedBox(                  width: 5,                ),                Text(provider.list[i].type),              ],            ),            leading: provider.deleteProgression?const CircularProgressIndicator():Image.network(              provider.list[i].image,              width: 80,              height: 80,              fit: BoxFit.cover,            ),            trailing: _Button(i),          ),        );      },    );  }}class _Button extends StatelessWidget {  final i;  const _Button(this.i);  @override  Widget build(BuildContext context) {    final provider = context.watch<MenuProvider>();    if (provider.list[i].have) {      return  ElevatedButton(        style: ElevatedButton.styleFrom(            backgroundColor: Colors.green),        onPressed: () => provider.update(provider.list[i], i),        child: const Text(" Mavjud Emas"),      );    }    return ElevatedButton(      style:          ElevatedButton.styleFrom(backgroundColor: Colors.red),      onPressed: () => provider.update(provider.list[i], i),      child: const Text("Mavjud"),    );  }}