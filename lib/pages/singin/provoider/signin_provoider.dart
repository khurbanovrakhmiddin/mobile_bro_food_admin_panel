import 'dart:convert';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/material.dart';import 'package:mobile_bro_food_admin_panel/pages/home/home_page.dart';import 'package:mobile_bro_food_admin_panel/repository/auth_repostory.dart';import 'package:mobile_bro_food_admin_panel/service/sd_service.dart';import 'package:mobile_bro_food_admin_panel/service/util_service.dart';class SigninProvoider extends ChangeNotifier{  SigninProvoider(){    init();  }  TextEditingController emailController = TextEditingController();  TextEditingController passwordController = TextEditingController    ();  bool passwordVisible = true;  final Repost _authRep = Repost();  Future<void> init()async{    String res = await DBService.readData(key: DBService.key);    if(res.isNotEmpty){      Map map = jsonDecode(res);      String mail = map['email'];      mail = mail.replaceFirst('@mobilebro.uz', '');      emailController.text = mail;      passwordController.text =  map['password'];      notifyListeners();    }  }  void visiblity() {    passwordVisible = !passwordVisible; notifyListeners();  }  Future<void> signIn(context) async{    String email = emailController.text.trim();    String password = passwordController.text.trim();print(email);print(password);    if(email.isEmpty || password.isEmpty) {      Utils.fireSnackBar("Please fill all gaps", context);      return;    }    try{      User? user =  await _authRep.signIn(context, email, password);      if(user != null){        List<UserInfo> info = user.providerData;        print(user.providerData.last.providerId);      await  DBService.storeData(value: jsonEncode({'email':user.email,          'uid':user.uid,"tenantId":user.tenantId,'password':password}));        notifyListeners();        goToNextPage(context);      }    }catch(e){    }  }  Future<void> goToNextPage(context)async{    Navigator.of(context).push(MaterialPageRoute(builder: (builder)    => const HomePage()));    notifyListeners();  }}