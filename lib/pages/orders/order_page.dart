import 'package:flutter/material.dart';import 'package:mobile_bro_food_admin_panel/model/Addres.dart';import 'package:mobile_bro_food_admin_panel/model/Order_model.dart';import 'package:mobile_bro_food_admin_panel/model/food_model.dart';import 'package:mobile_bro_food_admin_panel/pages/orders/controller/order_provider.dart';import 'package:provider/provider.dart';class OrderPage extends StatelessWidget {  const OrderPage({Key? key}) : super(key: key);  @override  Widget build(BuildContext context) {    return StreamProvider<List<OrderModel>>(      create: (context) => OrderProvider().order,      initialData: [],      child: _homePage(),    );  }}class _homePage extends StatelessWidget {  @override  Widget build(BuildContext context) {   return Consumer<List<OrderModel>>(       builder: (context,provider,__){     // if (context.list.isEmpty) {     //   return const Center(     //     child: Text("Buyurtma mavjud emas"),     //   );     // }   //  print(provider.list.length);       return ListView.builder(           itemCount: provider.length,           itemBuilder: (context, i) {             print(provider.length);             OrderModel order = provider[i];             List <Foods> foods = provider[i].foods;             return Card(                 child: ExpansionTile(                   title: Row(                     mainAxisAlignment: MainAxisAlignment.spaceAround,                     children: [                       Text("#${order.id}"),                       Icon(                           order.ready                               ? Icons.check_circle_outline                               : Icons.sync,                           color: Colors.green),                       ElevatedButton(                           onPressed: () {},                           child: Text("Curerga Jonatsh")),                     ],                   ),                   children: [                     ExpansionTile(title: Text('sd'),children: [  Text('order.addres.first.fromGeocoding.toString()'),                       Text(order.addres.floorCode),                       Text(order.addres.fromGeocoding),                       Text(order.addres.float),                       Text(order.addres.kvNumber),                       Text(order.addres.home),                     ],)                   ],                 ));           });   });  }}class FoodsMenu extends StatelessWidget {  final Foods foods;  const FoodsMenu({Key? key, required this.foods}) : super(key: key);  @override  Widget build(BuildContext context) {    return Column(      children: [        Text(foods.id),        Text(foods.name),        Image.network(          foods.image,          height: 100,          width: 100,        ),        Text(foods.count.toString()),      ],    );  }}