import 'package:flutter/material.dart';import 'package:mobile_bro_food_admin_panel/model/Addres.dart';import 'package:mobile_bro_food_admin_panel/model/Order_model.dart';import 'package:mobile_bro_food_admin_panel/model/food_model.dart';import 'package:mobile_bro_food_admin_panel/pages/orders/controller/order_provider.dart';import 'package:provider/provider.dart';class OrderPage extends StatelessWidget {  const OrderPage({Key? key}) : super(key: key);  @override  Widget build(BuildContext context) {    return ChangeNotifierProvider(      create: (context) => OrderProvider()..inits(),      child: _homePage(),    );  }}class _homePage extends StatelessWidget {  @override  Widget build(BuildContext context) {    final provider = context.watch<OrderProvider>();    if (provider.list.isEmpty) {      return const Center(        child: Text("Buyurtma mavjud emas"),      );    }    return FutureBuilder(        future: provider.inits(),        builder: (context, snap) {          print(snap.hasData);          return ListView.builder(              itemCount: provider.list.length,              itemBuilder: (context, i) {                OrderModel order = provider.list[i];               List <Foods> foods = provider.list[i].foods;                return Card(                    child: ExpansionTile(                  title: Row(                    mainAxisAlignment: MainAxisAlignment.spaceAround,                    children: [                      Text("#${order.id}"),                      Icon(                          order.ready                              ? Icons.check_circle_outline                              : Icons.sync,                          color: Colors.green),                      ElevatedButton(                          onPressed: () {},                          child: Text("Curerga Jonatsh")),                    ],                  ),                  children: [                    ExpansionTile(title: Text('sd'),children: [  Text('order.addres.first.fromGeocoding.toString()'),                      Text(order.addres.first.floorCode),                      Text(order.addres.first.fromGeocoding),                      Text(order.addres.first.float),                      Text(order.addres.first.kvNumber),                      Text(order.addres.first.home),                    ],)                  ],                ));              });        });  }}class FoodsMenu extends StatelessWidget {  final Foods foods;  const FoodsMenu({Key? key, required this.foods}) : super(key: key);  @override  Widget build(BuildContext context) {    return Column(      children: [        Text(foods.id),        Text(foods.name),        Image.network(          foods.image,          height: 100,          width: 100,        ),        Text(foods.count.toString()),      ],    );  }}